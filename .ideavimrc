" This page: https://github.com/JetBrains/ideavim/wiki/%22set%22-commands
" gives a list of supported commands for ideavim. Should review it
" periodically to see if anything neat is added.
"
" See a list of actions to use with :action here:
" https://gist.github.com/zchee/9c78f91cc5ad771c1f5d
" actually, get the list yourself with :actionlist
"
" A good blog post on getting started and some good shortcuts
" https://ikenox.info/blog/getting-started-ideavim/
"
" Remember that ':set blah?' shows the current value of blah

" When doing 'J' line join, perform smart intellij join
" Maybe I should make this a special mapping and leave 'J' alone?
set ideajoin

" Stay in current mode when refactoring instead of switching to select mode
set idearefactormode=keep

" These are pulled from my .vim/settings.vim file
set history=500     " keep 500 lines of command line history
set incsearch       " do incremental searching
set hlsearch        " highlight seach matches
set ignorecase      " ignore case if all lowercase
set smartcase       " match uppercase if any characters are upper
set gdefault        " default s///g on substitutions
set showcmd         " display incomplete commands
set showmode        " display mode
set scrolloff=3     " keep 3 lines visible at top/bottom

set keymodel=startsel,stopsel " allow shift-<end> style selection


" These are plugins emulated by ideavim
" (some of them I need to get for my normal vim config)
set highlightedyank
" text objects for function parameters
set argtextobj         " aa, ia, via, vaa
" swap 2 selections, combine with argtextobj for awesomeness (cxia, cxia)
" X is for visual mode ('c' changes text from visual mode)
set exchange           " cx, cxx, X, cxc
set commentary         " gcc, gc + motion, v_gc
set surround           " ys, cs, ds, S (use 'S' in visual mode)
" Change keyboard to Unicode Hex Input as seen here to get option/alt keys
" working: https://stackoverflow.com/questions/55202799/ideavim-multi-cursor-usage
set multiple-cursors   " <A-n>, <A-x>, <A-p>, g<A-n>


" Mappings pulled from .vim/mappings.vim
let mapleader = ","

" use ; for : too so I don't have to hit <shift>
nnoremap ; :
vnoremap ; :

" replace ; and , because i reused those for other stuff
nnoremap <space> ;

" Map <C-hjkl> to move between windows
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l

" Clear search highlighting
nnoremap <silent> <leader>/ :noh<cr>

" leader-c is copy to clipboard
" on mac i would just use command-c, is this worth having here?
nmap <leader>c "+y
vmap <leader>c "+y

" leader-v is paste from clipboard
" <leader>p is used by yankstack and vim-pasta, which one is winning?
" on mac i would just use command-v, is this worth having here?
nmap <leader>v "+gP
vmap <leader>v "+gP

" leader-x is cut to clipboard
" on mac i would just use command-x, is this worth having here?
nmap <leader>x "+x
vmap <leader>x "+x

" leader-A is Select all
noremap  <leader>a ggVG
vnoremap <leader>a <C-C>ggVG

" Q normally goes into the frustrating ex mode
" Repurpose to apply the 'q' macro
nnoremap Q @q
"vnoremap Q :norm @q<cr> no :norm for ideavim

" Does what <ALT-ENTER> normally does, easier to press (and not broken)
nmap <leader><leader> :action ShowIntentionActions<CR>
vmap <leader><leader> :action ShowIntentionActions<CR>

" TODO: add more mappings for intellij commands like refactors

" TODO: is there any way to specify the list of intellij commands that I want
" to be forwarded to the ideavim plugin here? Would be so great not to have to
" configure that each time I do a new install.

